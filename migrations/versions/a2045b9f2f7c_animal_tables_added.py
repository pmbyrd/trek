"""Animal tables added

Revision ID: a2045b9f2f7c
Revises: 21ec8df8a980
Create Date: 2023-06-29 11:46:11.009813

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = 'a2045b9f2f7c'
down_revision = '21ec8df8a980'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('weapons')
    op.drop_table('technologies')
    op.drop_table('foods')
    op.drop_table('elements')
    op.drop_table('performers')
    op.drop_table('companies')
    op.drop_table('occupations')
    op.drop_table('materials')
    op.drop_table('episode')
    op.drop_table('characters')
    op.drop_table('titles')
    op.drop_table('spacecraft')
    op.drop_table('locations')
    op.drop_table('species')
    op.drop_table('movies')
    op.drop_table('series')
    op.drop_table('spacecraftClasses')
    op.drop_table('season')
    op.drop_table('conflicts')
    op.drop_table('animals')
    op.drop_table('staff')
    op.drop_table('astronomicalObjects')
    op.drop_table('organizations')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organizations',
    sa.Column('uid', sa.VARCHAR(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('government', sa.BOOLEAN(), nullable=False),
    sa.Column('intergovernmentalOrganization', sa.BOOLEAN(), nullable=False),
    sa.Column('researchOrganization', sa.BOOLEAN(), nullable=False),
    sa.Column('sportOrganization', sa.BOOLEAN(), nullable=False),
    sa.Column('medicalOrganization', sa.BOOLEAN(), nullable=False),
    sa.Column('militaryOrganization', sa.BOOLEAN(), nullable=False),
    sa.Column('militaryUnit', sa.BOOLEAN(), nullable=False),
    sa.Column('governmentAgency', sa.BOOLEAN(), nullable=False),
    sa.Column('lawEnforcementAgency', sa.BOOLEAN(), nullable=False),
    sa.Column('prisonOrPenalColony', sa.BOOLEAN(), nullable=False),
    sa.Column('mirror', sa.BOOLEAN(), nullable=False),
    sa.Column('alternateReality', sa.BOOLEAN(), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('astronomicalObjects',
    sa.Column('uid', sa.TEXT(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('astronomicalObjectType', sa.TEXT(), nullable=True),
    sa.Column('location', sqlite.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('staff',
    sa.Column('uid', sa.VARCHAR(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('birthName', sa.TEXT(), nullable=True),
    sa.Column('gender', sa.TEXT(), nullable=True),
    sa.Column('dateOfBirth', sa.TEXT(), nullable=True),
    sa.Column('placeOfBirth', sa.TEXT(), nullable=True),
    sa.Column('dateOfDeath', sa.TEXT(), nullable=True),
    sa.Column('placeOfDeath', sa.TEXT(), nullable=True),
    sa.Column('artDepartment', sa.BOOLEAN(), nullable=False),
    sa.Column('artDirector', sa.BOOLEAN(), nullable=False),
    sa.Column('productionDesigner', sa.BOOLEAN(), nullable=False),
    sa.Column('cameraAndElectricalDepartment', sa.BOOLEAN(), nullable=False),
    sa.Column('cinematographer', sa.BOOLEAN(), nullable=False),
    sa.Column('castingDepartment', sa.BOOLEAN(), nullable=False),
    sa.Column('costumeDepartment', sa.BOOLEAN(), nullable=False),
    sa.Column('costumeDesigner', sa.BOOLEAN(), nullable=False),
    sa.Column('director', sa.BOOLEAN(), nullable=False),
    sa.Column('assistantOrSecondUnitDirector', sa.BOOLEAN(), nullable=False),
    sa.Column('exhibitAndAttractionStaff', sa.BOOLEAN(), nullable=False),
    sa.Column('filmEditor', sa.BOOLEAN(), nullable=False),
    sa.Column('linguist', sa.BOOLEAN(), nullable=False),
    sa.Column('locationStaff', sa.BOOLEAN(), nullable=False),
    sa.Column('makeupStaff', sa.BOOLEAN(), nullable=False),
    sa.Column('musicDepartment', sa.BOOLEAN(), nullable=False),
    sa.Column('composer', sa.BOOLEAN(), nullable=False),
    sa.Column('personalAssistant', sa.BOOLEAN(), nullable=False),
    sa.Column('producer', sa.BOOLEAN(), nullable=False),
    sa.Column('productionAssociate', sa.BOOLEAN(), nullable=False),
    sa.Column('productionStaff', sa.BOOLEAN(), nullable=False),
    sa.Column('publicationStaff', sa.BOOLEAN(), nullable=False),
    sa.Column('scienceConsultant', sa.BOOLEAN(), nullable=False),
    sa.Column('soundDepartment', sa.BOOLEAN(), nullable=False),
    sa.Column('specialAndVisualEffectsStaff', sa.BOOLEAN(), nullable=False),
    sa.Column('author', sa.BOOLEAN(), nullable=False),
    sa.Column('audioAuthor', sa.BOOLEAN(), nullable=False),
    sa.Column('calendarArtist', sa.BOOLEAN(), nullable=False),
    sa.Column('comicArtist', sa.BOOLEAN(), nullable=False),
    sa.Column('comicAuthor', sa.BOOLEAN(), nullable=False),
    sa.Column('comicColorArtist', sa.BOOLEAN(), nullable=False),
    sa.Column('comicInteriorArtist', sa.BOOLEAN(), nullable=False),
    sa.Column('comicInkArtist', sa.BOOLEAN(), nullable=False),
    sa.Column('comicPencilArtist', sa.BOOLEAN(), nullable=False),
    sa.Column('comicLetterArtist', sa.BOOLEAN(), nullable=False),
    sa.Column('comicStripArtist', sa.BOOLEAN(), nullable=False),
    sa.Column('gameArtist', sa.BOOLEAN(), nullable=False),
    sa.Column('gameAuthor', sa.BOOLEAN(), nullable=False),
    sa.Column('novelArtist', sa.BOOLEAN(), nullable=False),
    sa.Column('novelAuthor', sa.BOOLEAN(), nullable=False),
    sa.Column('referenceArtist', sa.BOOLEAN(), nullable=False),
    sa.Column('referenceAuthor', sa.BOOLEAN(), nullable=False),
    sa.Column('publicationArtist', sa.BOOLEAN(), nullable=False),
    sa.Column('publicationDesigner', sa.BOOLEAN(), nullable=False),
    sa.Column('publicationEditor', sa.BOOLEAN(), nullable=False),
    sa.Column('publicityArtist', sa.BOOLEAN(), nullable=False),
    sa.Column('cbsDigitalStaff', sa.BOOLEAN(), nullable=False),
    sa.Column('ilmProductionStaff', sa.BOOLEAN(), nullable=False),
    sa.Column('specialFeaturesStaff', sa.BOOLEAN(), nullable=False),
    sa.Column('storyEditor', sa.BOOLEAN(), nullable=False),
    sa.Column('studioExecutive', sa.BOOLEAN(), nullable=False),
    sa.Column('stuntDepartment', sa.BOOLEAN(), nullable=False),
    sa.Column('transportationDepartment', sa.BOOLEAN(), nullable=False),
    sa.Column('videoGameProductionStaff', sa.BOOLEAN(), nullable=False),
    sa.Column('writer', sa.BOOLEAN(), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('animals',
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('uid', sa.TEXT(), nullable=False),
    sa.Column('earthAnimal', sa.BOOLEAN(), nullable=False),
    sa.Column('earthInsect', sa.BOOLEAN(), nullable=False),
    sa.Column('avian', sa.BOOLEAN(), nullable=False),
    sa.Column('canine', sa.BOOLEAN(), nullable=False),
    sa.Column('feline', sa.BOOLEAN(), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('conflicts',
    sa.Column('uid', sa.VARCHAR(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('yearFrom', sa.INTEGER(), nullable=True),
    sa.Column('yearTo', sa.INTEGER(), nullable=True),
    sa.Column('earthConflict', sa.BOOLEAN(), nullable=False),
    sa.Column('federationWar', sa.BOOLEAN(), nullable=False),
    sa.Column('klingonWar', sa.BOOLEAN(), nullable=False),
    sa.Column('dominionWarBattle', sa.BOOLEAN(), nullable=False),
    sa.Column('alternateReality', sa.BOOLEAN(), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('season',
    sa.Column('uid', sa.VARCHAR(), nullable=False),
    sa.Column('title', sa.TEXT(), nullable=False),
    sa.Column('series', sqlite.JSON(), nullable=True),
    sa.Column('series_uid', sa.VARCHAR(), nullable=True),
    sa.Column('seasonNumber', sa.INTEGER(), nullable=False),
    sa.Column('numberOfEpisodes', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['series_uid'], ['series.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('spacecraftClasses',
    sa.Column('uid', sa.VARCHAR(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('numberOfDecks', sa.INTEGER(), nullable=True),
    sa.Column('warpCapable', sa.BOOLEAN(), nullable=False),
    sa.Column('alternateReality', sa.BOOLEAN(), nullable=False),
    sa.Column('activeFrom', sa.TEXT(), nullable=True),
    sa.Column('activeTo', sa.TEXT(), nullable=True),
    sa.Column('species', sqlite.JSON(), nullable=True),
    sa.Column('species_uid', sa.VARCHAR(), nullable=True),
    sa.Column('owner', sa.TEXT(), nullable=True),
    sa.Column('operator', sa.TEXT(), nullable=True),
    sa.Column('affiliation', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['species_uid'], ['species.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('series',
    sa.Column('uid', sa.VARCHAR(), nullable=False),
    sa.Column('title', sa.TEXT(), nullable=False),
    sa.Column('abbreviation', sa.TEXT(), nullable=False),
    sa.Column('productionStartYear', sa.INTEGER(), nullable=True),
    sa.Column('productionEndYear', sa.INTEGER(), nullable=True),
    sa.Column('originalRunStartDate', sa.TEXT(), nullable=True),
    sa.Column('originalRunEndDate', sa.TEXT(), nullable=True),
    sa.Column('seasonsCount', sa.INTEGER(), nullable=True),
    sa.Column('episodesCount', sa.INTEGER(), nullable=True),
    sa.Column('featureLengthEpisodesCount', sa.INTEGER(), nullable=True),
    sa.Column('productionCompany', sqlite.JSON(), nullable=True),
    sa.Column('originalBroadcaster', sqlite.JSON(), nullable=True),
    sa.Column('companies_uid', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['companies_uid'], ['companies.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('movies',
    sa.Column('uid', sa.VARCHAR(), nullable=False),
    sa.Column('title', sa.TEXT(), nullable=False),
    sa.Column('mainDirector', sqlite.JSON(), nullable=True),
    sa.Column('staff_uid', sa.VARCHAR(), nullable=True),
    sa.Column('titleBulgarian', sa.TEXT(), nullable=True),
    sa.Column('titleCatalan', sa.TEXT(), nullable=True),
    sa.Column('titleChineseTraditional', sa.TEXT(), nullable=True),
    sa.Column('titleGerman', sa.TEXT(), nullable=True),
    sa.Column('titleItalian', sa.TEXT(), nullable=True),
    sa.Column('titleJapanese', sa.TEXT(), nullable=True),
    sa.Column('titlePolish', sa.TEXT(), nullable=True),
    sa.Column('titleRussian', sa.TEXT(), nullable=True),
    sa.Column('titleSerbian', sa.TEXT(), nullable=True),
    sa.Column('titleSpanish', sa.TEXT(), nullable=True),
    sa.Column('stardateFrom', sa.TEXT(), nullable=True),
    sa.Column('stardateTo', sa.TEXT(), nullable=True),
    sa.Column('yearFrom', sa.TEXT(), nullable=True),
    sa.Column('yearTo', sa.TEXT(), nullable=True),
    sa.Column('usReleaseDate', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['staff_uid'], ['staff.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('species',
    sa.Column('uid', sa.VARCHAR(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('homeworld', sqlite.JSON(), nullable=True),
    sa.Column('quadrant', sqlite.JSON(), nullable=True),
    sa.Column('extinctSpecies', sa.BOOLEAN(), nullable=False),
    sa.Column('warpCapableSpecies', sa.BOOLEAN(), nullable=False),
    sa.Column('extraGalacticSpecies', sa.BOOLEAN(), nullable=False),
    sa.Column('humanoidSpecies', sa.BOOLEAN(), nullable=False),
    sa.Column('reptilianSpecies', sa.BOOLEAN(), nullable=False),
    sa.Column('nonCorporealSpecies', sa.BOOLEAN(), nullable=False),
    sa.Column('shapeshiftingSpecies', sa.BOOLEAN(), nullable=False),
    sa.Column('spaceborneSpecies', sa.BOOLEAN(), nullable=False),
    sa.Column('telepathicSpecies', sa.BOOLEAN(), nullable=False),
    sa.Column('transDimensionalSpecies', sa.BOOLEAN(), nullable=False),
    sa.Column('unnamedSpecies', sa.BOOLEAN(), nullable=False),
    sa.Column('alternateReality', sa.BOOLEAN(), nullable=False),
    sa.Column('astronomicalObects_uid', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['astronomicalObects_uid'], ['astronomicalObjects.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('locations',
    sa.Column('uid', sa.VARCHAR(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('earthlyLocation', sa.BOOLEAN(), nullable=False),
    sa.Column('fictionalLocation', sa.BOOLEAN(), nullable=False),
    sa.Column('religiousLocation', sa.BOOLEAN(), nullable=False),
    sa.Column('geographicalLocation', sa.BOOLEAN(), nullable=False),
    sa.Column('bodyOfWater', sa.BOOLEAN(), nullable=False),
    sa.Column('country', sa.BOOLEAN(), nullable=False),
    sa.Column('subnationalEntity', sa.BOOLEAN(), nullable=False),
    sa.Column('settlement', sa.BOOLEAN(), nullable=False),
    sa.Column('usSettlement', sa.BOOLEAN(), nullable=False),
    sa.Column('bajoranSettlement', sa.BOOLEAN(), nullable=False),
    sa.Column('colony', sa.BOOLEAN(), nullable=False),
    sa.Column('landform', sa.BOOLEAN(), nullable=False),
    sa.Column('landmark', sa.BOOLEAN(), nullable=False),
    sa.Column('road', sa.BOOLEAN(), nullable=False),
    sa.Column('structure', sa.BOOLEAN(), nullable=False),
    sa.Column('shipyard', sa.BOOLEAN(), nullable=False),
    sa.Column('buildingInterior', sa.BOOLEAN(), nullable=False),
    sa.Column('establishment', sa.BOOLEAN(), nullable=False),
    sa.Column('medicalEstablishment', sa.BOOLEAN(), nullable=False),
    sa.Column('ds9Establishment', sa.BOOLEAN(), nullable=False),
    sa.Column('school', sa.BOOLEAN(), nullable=False),
    sa.Column('mirror', sa.BOOLEAN(), nullable=False),
    sa.Column('alternateReality', sa.BOOLEAN(), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('spacecraft',
    sa.Column('uid', sa.VARCHAR(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('registry', sa.TEXT(), nullable=True),
    sa.Column('status', sa.TEXT(), nullable=True),
    sa.Column('dateStatus', sa.TEXT(), nullable=True),
    sa.Column('spacecraftClass', sqlite.JSON(), nullable=True),
    sa.Column('owner', sqlite.JSON(), nullable=True),
    sa.Column('orginization_uid', sa.VARCHAR(), nullable=True),
    sa.Column('operator', sqlite.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['orginization_uid'], ['organizations.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('titles',
    sa.Column('uid', sa.VARCHAR(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('militaryRank', sa.BOOLEAN(), nullable=False),
    sa.Column('fleetRank', sa.BOOLEAN(), nullable=False),
    sa.Column('religiousTitle', sa.BOOLEAN(), nullable=False),
    sa.Column('position', sa.BOOLEAN(), nullable=False),
    sa.Column('mirror', sa.BOOLEAN(), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('characters',
    sa.Column('uid', sa.TEXT(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('gender', sa.TEXT(), nullable=True),
    sa.Column('yearOfBirth', sa.INTEGER(), nullable=True),
    sa.Column('monthOfBirth', sa.INTEGER(), nullable=True),
    sa.Column('dayOfBirth', sa.INTEGER(), nullable=True),
    sa.Column('placeOfBirth', sa.TEXT(), nullable=True),
    sa.Column('yearOfDeath', sa.INTEGER(), nullable=True),
    sa.Column('monthOfDeath', sa.INTEGER(), nullable=True),
    sa.Column('dayOfDeath', sa.INTEGER(), nullable=True),
    sa.Column('placeOfDeath', sa.TEXT(), nullable=True),
    sa.Column('height', sa.INTEGER(), nullable=True),
    sa.Column('weight', sa.INTEGER(), nullable=True),
    sa.Column('deceased', sa.BOOLEAN(), nullable=True),
    sa.Column('bloodType', sa.TEXT(), nullable=True),
    sa.Column('maritalStatus', sa.TEXT(), nullable=True),
    sa.Column('serialNumber', sa.TEXT(), nullable=True),
    sa.Column('hologramActivationDate', sa.INTEGER(), nullable=True),
    sa.Column('hologramStatus', sa.TEXT(), nullable=True),
    sa.Column('hologram', sa.BOOLEAN(), nullable=True),
    sa.Column('fictionalCharacter', sa.BOOLEAN(), nullable=True),
    sa.Column('mirror', sa.BOOLEAN(), nullable=True),
    sa.Column('alternateReality', sa.BOOLEAN(), nullable=True),
    sa.Column('hologramDateStatus', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('episode',
    sa.Column('uid', sa.VARCHAR(), nullable=False),
    sa.Column('title', sa.TEXT(), nullable=False),
    sa.Column('titleGerman', sa.TEXT(), nullable=True),
    sa.Column('titleItalian', sa.TEXT(), nullable=True),
    sa.Column('titleJapanese', sa.TEXT(), nullable=True),
    sa.Column('series', sqlite.JSON(), nullable=True),
    sa.Column('season', sqlite.JSON(), nullable=True),
    sa.Column('seasonNumber', sa.INTEGER(), nullable=False),
    sa.Column('episodeNumber', sa.INTEGER(), nullable=False),
    sa.Column('productionSerialNumber', sa.TEXT(), nullable=False),
    sa.Column('featureLength', sa.BOOLEAN(), nullable=False),
    sa.Column('stardateFrom', sa.FLOAT(), nullable=True),
    sa.Column('stardateTo', sa.FLOAT(), nullable=True),
    sa.Column('yearFrom', sa.INTEGER(), nullable=True),
    sa.Column('yearTo', sa.INTEGER(), nullable=True),
    sa.Column('usAirDate', sa.TEXT(), nullable=True),
    sa.Column('finalScriptDate', sa.TEXT(), nullable=True),
    sa.Column('series_uid', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['series_uid'], ['series.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('materials',
    sa.Column('uid', sa.VARCHAR(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('chemicalCompound', sa.BOOLEAN(), nullable=False),
    sa.Column('biochemicalCompound', sa.BOOLEAN(), nullable=False),
    sa.Column('drug', sa.BOOLEAN(), nullable=False),
    sa.Column('poisonousSubstance', sa.BOOLEAN(), nullable=False),
    sa.Column('explosive', sa.BOOLEAN(), nullable=False),
    sa.Column('gemstone', sa.BOOLEAN(), nullable=False),
    sa.Column('alloyOrComposite', sa.BOOLEAN(), nullable=False),
    sa.Column('fuel', sa.BOOLEAN(), nullable=False),
    sa.Column('mineral', sa.BOOLEAN(), nullable=False),
    sa.Column('preciousMaterial', sa.BOOLEAN(), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('occupations',
    sa.Column('uid', sa.VARCHAR(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('legalOccupation', sa.BOOLEAN(), nullable=False),
    sa.Column('medicalOccupation', sa.BOOLEAN(), nullable=False),
    sa.Column('scientificOccupation', sa.BOOLEAN(), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('companies',
    sa.Column('uid', sa.VARCHAR(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('broadcaster', sa.BOOLEAN(), nullable=False),
    sa.Column('collectibleCompany', sa.BOOLEAN(), nullable=False),
    sa.Column('conglomerate', sa.BOOLEAN(), nullable=False),
    sa.Column('digitalVisualEffectsCompany', sa.BOOLEAN(), nullable=False),
    sa.Column('distributor', sa.BOOLEAN(), nullable=False),
    sa.Column('gameCompany', sa.BOOLEAN(), nullable=False),
    sa.Column('filmEquipmentCompany', sa.BOOLEAN(), nullable=False),
    sa.Column('makeUpEffectsStudio', sa.BOOLEAN(), nullable=False),
    sa.Column('mattePaintingCompany', sa.BOOLEAN(), nullable=False),
    sa.Column('modelAndMiniatureEffectsCompany', sa.BOOLEAN(), nullable=False),
    sa.Column('postProductionCompany', sa.BOOLEAN(), nullable=False),
    sa.Column('productionCompany', sa.BOOLEAN(), nullable=False),
    sa.Column('propCompany', sa.BOOLEAN(), nullable=False),
    sa.Column('recordLabel', sa.BOOLEAN(), nullable=False),
    sa.Column('specialEffectsCompany', sa.BOOLEAN(), nullable=False),
    sa.Column('tvAndFilmProductionCompany', sa.BOOLEAN(), nullable=False),
    sa.Column('videoGameCompany', sa.BOOLEAN(), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('performers',
    sa.Column('uid', sa.TEXT(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('birthName', sa.TEXT(), nullable=True),
    sa.Column('gender', sa.TEXT(), nullable=True),
    sa.Column('dateOfBirth', sa.TEXT(), nullable=True),
    sa.Column('placeOfBirth', sa.TEXT(), nullable=True),
    sa.Column('dateOfDeath', sa.TEXT(), nullable=True),
    sa.Column('placeOfDeath', sa.TEXT(), nullable=True),
    sa.Column('animalPerformer', sa.BOOLEAN(), nullable=False),
    sa.Column('disPerformer', sa.BOOLEAN(), nullable=False),
    sa.Column('ds9Performer', sa.BOOLEAN(), nullable=False),
    sa.Column('entPerformer', sa.BOOLEAN(), nullable=False),
    sa.Column('filmPerformer', sa.BOOLEAN(), nullable=False),
    sa.Column('standInPerformer', sa.BOOLEAN(), nullable=False),
    sa.Column('stuntPerformer', sa.BOOLEAN(), nullable=False),
    sa.Column('tasPerformer', sa.BOOLEAN(), nullable=False),
    sa.Column('tngPerformer', sa.BOOLEAN(), nullable=False),
    sa.Column('tosPerformer', sa.BOOLEAN(), nullable=False),
    sa.Column('videoGamePerformer', sa.BOOLEAN(), nullable=False),
    sa.Column('voicePerformer', sa.BOOLEAN(), nullable=False),
    sa.Column('voyPerformer', sa.BOOLEAN(), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('elements',
    sa.Column('uid', sa.VARCHAR(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('symbol', sa.TEXT(), nullable=True),
    sa.Column('atomicNumber', sa.INTEGER(), nullable=True),
    sa.Column('atomicWeight', sa.INTEGER(), nullable=True),
    sa.Column('transuranium', sa.BOOLEAN(), nullable=False),
    sa.Column('gammaSeries', sa.BOOLEAN(), nullable=False),
    sa.Column('hypersonicSeries', sa.BOOLEAN(), nullable=False),
    sa.Column('megaSeries', sa.BOOLEAN(), nullable=False),
    sa.Column('omegaSeries', sa.BOOLEAN(), nullable=False),
    sa.Column('transonicSeries', sa.BOOLEAN(), nullable=False),
    sa.Column('worldSeries', sa.BOOLEAN(), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('foods',
    sa.Column('uid', sa.VARCHAR(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('earthlyOrigin', sa.BOOLEAN(), nullable=False),
    sa.Column('dessert', sa.BOOLEAN(), nullable=False),
    sa.Column('fruit', sa.BOOLEAN(), nullable=False),
    sa.Column('herbOrSpice', sa.BOOLEAN(), nullable=False),
    sa.Column('sauce', sa.BOOLEAN(), nullable=False),
    sa.Column('soup', sa.BOOLEAN(), nullable=False),
    sa.Column('beverage', sa.BOOLEAN(), nullable=False),
    sa.Column('alcoholicBeverage', sa.BOOLEAN(), nullable=False),
    sa.Column('juice', sa.BOOLEAN(), nullable=False),
    sa.Column('tea', sa.BOOLEAN(), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('technologies',
    sa.Column('uid', sa.VARCHAR(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('borgTechnology', sa.BOOLEAN(), nullable=False),
    sa.Column('borgComponent', sa.BOOLEAN(), nullable=False),
    sa.Column('communicationsTechnology', sa.BOOLEAN(), nullable=False),
    sa.Column('computerTechnology', sa.BOOLEAN(), nullable=False),
    sa.Column('computerProgramming', sa.BOOLEAN(), nullable=False),
    sa.Column('subroutine', sa.BOOLEAN(), nullable=False),
    sa.Column('database', sa.BOOLEAN(), nullable=False),
    sa.Column('energyTechnology', sa.BOOLEAN(), nullable=False),
    sa.Column('fictionalTechnology', sa.BOOLEAN(), nullable=False),
    sa.Column('holographicTechnology', sa.BOOLEAN(), nullable=False),
    sa.Column('identificationTechnology', sa.BOOLEAN(), nullable=False),
    sa.Column('lifeSupportTechnology', sa.BOOLEAN(), nullable=False),
    sa.Column('sensorTechnology', sa.BOOLEAN(), nullable=False),
    sa.Column('shieldTechnology', sa.BOOLEAN(), nullable=False),
    sa.Column('tool', sa.BOOLEAN(), nullable=False),
    sa.Column('culinaryTool', sa.BOOLEAN(), nullable=False),
    sa.Column('engineeringTool', sa.BOOLEAN(), nullable=False),
    sa.Column('householdTool', sa.BOOLEAN(), nullable=False),
    sa.Column('medicalEquipment', sa.BOOLEAN(), nullable=False),
    sa.Column('transporterTechnology', sa.BOOLEAN(), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('weapons',
    sa.Column('uid', sa.VARCHAR(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('handHeldWeapon', sa.BOOLEAN(), nullable=False),
    sa.Column('laserTechnology', sa.BOOLEAN(), nullable=False),
    sa.Column('plasmaTechnology', sa.BOOLEAN(), nullable=False),
    sa.Column('worldSeries', sa.BOOLEAN(), nullable=True),
    sa.Column('photonicTechnology', sa.BOOLEAN(), nullable=False),
    sa.Column('phaserTechnology', sa.BOOLEAN(), nullable=False),
    sa.Column('mirror', sa.BOOLEAN(), nullable=False),
    sa.Column('alternateReality', sa.BOOLEAN(), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    # ### end Alembic commands ###
